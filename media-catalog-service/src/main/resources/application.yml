server:
  port: 59001
  shutdown: graceful
  netty:
    connection-timeout: 2s
    idle-timeout: 15s

spring:
  application:
    name: media-catalog-service
  config:
    import: "optional:kubernetes:"
  cache:
    type: redis
  data:
    redis:
      host: localhost
      port: 56371
      repositories:
        enabled: off
  main:
    allow-bean-definition-overriding: true
  lifecycle:
    timeout-per-shutdown-phase: 15s
  reactor:
    context-propagation: auto
  r2dbc:
    username: user
    password: password
    url: r2dbc:postgresql://localhost:5432/loopin_media_catalog
    pool:
      max-create-connection-time: 2s
      initial-size: 5
      max-size: 10
  flyway:
    user: ${spring.r2dbc.username}
    password: ${spring.r2dbc.password}
    url: jdbc:postgresql://localhost:5432/loopin_media_catalog
  security:
    context:
      strategy: MODE_REACTIVE
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:59022/realms/loopin
  http:
    codecs:
      max-in-memory-size: 50MB

bucket4j:
  enabled: true
  cache-to-use: redis-lettuce
  filters:
    - cache-name: buckets
      filter-method: webflux
      filter-order: 350
      url: /api/v1/playlists/youtube/.*
      rate-limits:
        - execute-condition: "headers.getFirst('X-Username') != 'admin'"
          execute-predicates:
            - METHOD=POST,PATCH
          cache-key: >
            headers.getFirst('X-Username')
              ?: #request.remoteAddress?.address?.hostAddress
          bandwidths:
            - capacity: 5
              time: 1
              unit: days
              refill-speed: interval

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
  level:
    com.giffing.bucket4j: trace
    com.loopin.media_catalog_service: debug

loopin:
  youtube-service-uri: "http://localhost:59011"
#debug: true
