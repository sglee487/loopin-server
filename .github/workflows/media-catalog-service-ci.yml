name: Media Catalog Service CI

on:
  push:
    branches: [ '**' ]
    paths: [ 'media-catalog-service/**' ]
  pull_request:
    paths: [ 'media-catalog-service/**' ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  OWNER: sglee487
  IMAGE_NAME: loopin-server/media-catalog-service
  DEPLOY_REPO: loopin-server
  APP_REPO: catalog-service
  VERSION: ${{ github.sha }}

jobs:
  ci:
    runs-on: ubuntu-22.04
    defaults: { run: { working-directory: media-catalog-service } }
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle

      - name: Unit & integration tests
        run: |
          chmod +x gradlew
          ./gradlew build

      - name: Source scan (Anchore)
        uses: anchore/scan-action@v3
        id: src-scan
        with:
          path: "${{ github.workspace }}/media-catalog-service"
          fail-build: false
          severity-cutoff: high

      - uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: ${{ steps.src-scan.outputs.sarif }}

      # ──────────────────────── main 브랜치 push 전용 단계 ────────────────────────
      - name: Log in to GHCR
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build image (local only)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          BP_OCI_LABELS: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
        run: |
          chmod +x gradlew
          ./gradlew bootBuildImage \
            --imageName ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: Push image (SHA tag)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: docker push ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: Tag & push image (latest)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          docker tag ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} \
                     ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest
          docker push ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest

      - name: Scan image (Anchore)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: anchore/scan-action@v3
        id: img-scan
        with:
          image: ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high

      - uses: github/codeql-action/upload-sarif@v3
        if: github.ref == 'refs/heads/main' && github.event_name == 'push' && ( success() || failure() )
        with:
          sarif_file: ${{ steps.img-scan.outputs.sarif }}

  ###############################################################################
  # 2) FUNCTIONAL / PERFORMANCE / SECURITY 테스트 (main push 시)
  ###############################################################################
  functional:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: ci
    runs-on: ubuntu-22.04
    steps:
      - run: echo "Running functional acceptance tests for Media Catalog Service"

  performance:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: ci
    runs-on: ubuntu-22.04
    steps:
      - run: echo "Running performance tests for Media Catalog Service"

  security:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: ci
    runs-on: ubuntu-22.04
    steps:
      - run: echo "Running security tests for Media Catalog Service"

  ###############################################################################
  # 3) DELIVER
  ###############################################################################
#  deliver:
#    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#    needs: [ functional, performance, security ]
#    runs-on: ubuntu-22.04
#    steps:
#      - name: Notify deploy repo
#        uses: peter-evans/repository-dispatch@v3
#        with:
#          token: ${{ secrets.DISPATCH_TOKEN }}
#          repository: ${{ env.OWNER }}/${{ env.DEPLOY_REPO }}
#          event-type: app_delivery
#          client-payload: |
#            {
#              "app_image": "${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.IMAGE_NAME }}",
#              "app_name": "${{ env.APP_REPO }}",
#              "app_version": "${{ env.VERSION }}"
#            }
