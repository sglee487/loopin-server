name: Gateway Service CI

on:
  push:
    branches: [ '**' ]
    paths: [ 'gateway-service/**' ]
  pull_request:
    paths: [ 'gateway-service/**' ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  OWNER: sglee487
  IMAGE_NAME: loopin-server/gateway-service   # ← (3) 이미지 경로
  VERSION: ${{ github.sha }}

  SHOULD_RELEASE: ${{ github.event_name == 'push' && (
    github.ref_name == 'main' ||
    github.ref_name == 'argocd' ||
    github.ref_name == 'deploy') }}


jobs:
  ci:
    runs-on: ubuntu-22.04
    defaults: { run: { working-directory: gateway-service } }   # ← (2) 워킹 디렉터리
    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: gradle
      - name: Unit & integration tests
        run: |
          chmod +x gradlew
          ./gradlew build
      - name: Source scan (Anchore / Grype)
        uses: anchore/scan-action@v3
        id: src-scan
        with:
          path: .
          fail-build: false
          severity-cutoff: high
      - name: Upload SARIF (src)
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.src-scan.outputs.sarif }}
          category: anchore-src
      # ───────────────────────────────────────
      - name: Log in to GHCR
        if: ${{ env.SHOULD_RELEASE == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      - name: Build image (local only)
        if: ${{ env.SHOULD_RELEASE == 'true' }}
        env:
          BP_OCI_SOURCE: https://github.com/${{ github.repository }}
        run: |
          chmod +x gradlew
          ./gradlew bootBuildImage \
            --imageName ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
      - name: Tag latest & push both tags
        if: ${{ env.SHOULD_RELEASE == 'true' }}
        run: |
          docker tag ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} \
                     ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:latest
          docker push --all-tags ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}
      - name: Scan image (Anchore / Grype)
        if: ${{ env.SHOULD_RELEASE == 'true' }}
        uses: anchore/scan-action@v3
        id: img-scan
        with:
          image: ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fail-build: false
          severity-cutoff: high
      - name: Upload SARIF (image)
        if: ${{ env.SHOULD_RELEASE == 'true' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.img-scan.outputs.sarif }}
          category: anchore-image
      # ───────────────────────────────────────
      - name: Update and Push Kubernetes Manifest
        if: ${{ env.SHOULD_RELEASE == 'true' }}
        run: |
          # The default working directory is 'gateway-service'. Go to the repo root.
          cd ..

          # Update the image tag in the deployment manifest
          sed -i "s|image: .*|image: ghcr.io/${{ env.OWNER }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}|g" gateway-service/k8s/deployment.yaml

          # Configure git user
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Commit and push if there are changes
          if ! git diff --quiet gateway-service/k8s/base/deployment.yaml; then
            git add gateway-service/k8s/base/deployment.yaml
            git commit -m "ci(gateway-service): update image to ${{ env.VERSION }}"
            git push
          else
            echo "Manifest is already up-to-date."
          fi
